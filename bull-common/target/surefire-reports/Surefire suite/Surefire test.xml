<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="MacBook-Pro-di-Anna.local" failures="0" tests="128" name="Surefire test" time="5.047" errors="0" timestamp="26 mag 2019 20:28:21 GMT">
  <testcase classname="com.hotels.beans.validator.ValidatorTest" name="testGetConstraintViolationsWorksAsExpected" time="1.396"/>
  <testcase classname="com.hotels.beans.validator.ValidatorTest" name="testGetConstraintViolationsWorksAsExpected" time="0.062"/>
  <testcase classname="com.hotels.beans.validator.ValidatorTest" name="testNotNullRaisesAnExceptionWhenTheGivenObjectIsNull" time="0.0"/>
  <testcase classname="com.hotels.beans.validator.ValidatorTest" name="testNotNullRaisesAnExceptionWhenTheGivenObjectIsNull" time="0.0"/>
  <testcase classname="com.hotels.beans.validator.ValidatorTest" name="testThatNoExceptionAreThrownWhenTheGivenObjectIsNotNullEvenWithoutACustomMessage" time="0.0"/>
  <testcase classname="com.hotels.beans.validator.ValidatorTest" name="testThatNoExceptionAreThrownWhenTheGivenObjectIsNotNullEvenWithoutACustomMessage" time="0.0"/>
  <testcase classname="com.hotels.beans.validator.ValidatorTest" name="testValidateDoesNotThrowsExceptionWhenTheBeanIsValid" time="0.0"/>
  <testcase classname="com.hotels.beans.validator.ValidatorTest" name="testValidateThrowsExceptionWhenTheBeanIsInvalid" time="0.003"/>
  <testcase classname="com.hotels.beans.cache.CacheManagerFactoryTest" name="testGetCacheReturnsACacheManagerInstance" time="0.006"/>
  <testcase classname="com.hotels.beans.cache.CacheManagerFactoryTest" name="testGetCacheThrowsExceptionIfTheCacheNameIsNull" time="0.0"/>
  <testcase classname="com.hotels.beans.cache.CacheManagerTest" name="testCacheObjectStoresTheDefaultValueIfTheGivenObjectIsNull" time="0.0"/>
  <testcase classname="com.hotels.beans.cache.CacheManagerTest" name="testCacheObjectStoresTheGivenObjectWithTheGivenKey" time="0.001"/>
  <testcase classname="com.hotels.beans.cache.CacheManagerTest" name="testRemoveFromCacheRemovesTheObject" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testAllParameterAnnotatedWithWorksAsExpected" time="0.02"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testAllParameterAnnotatedWithWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testAreParameterNamesAvailableWorksAsExpected" time="0.042"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testAreParameterNamesAvailableWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testContainsAnnotationWorksAsExpected" time="0.005"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testContainsAnnotationWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetAllArgsConstructorWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetClassTypeWorksAsExpected" time="0.032"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetClassTypeWorksAsExpected" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetClassTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetConstructorParameters" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetDeclaredClassesWorksAsExpected" time="0.048"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetDeclaredClassesWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetDeclaredFieldsWorksAsExpected" time="0.009"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetDeclaredFieldsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetDeclaredFieldsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetDefaultTypeValueWorksAsExpected" time="0.004"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetInstanceRaisesAnInstanceCreationExceptionIfAnErrorOccurs" time="0.004"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetNoArgsConstructorThrowsExceptionIfTheConstructorIsMissing" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetNoArgsConstructorWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetNotFinalFieldsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetNotFinalFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.003"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetPrivateFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetPrivateFinalFieldsWorksAsExpected" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetPrivateFinalFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetPrivateFinalFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetSetterMethodsWorksAsExpected" time="0.006"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetSetterMethodsWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetTotalFieldsWorksAsExpected" time="0.004"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testGetTotalFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testHasAccessibleConstructorsWorksAsExpected" time="0.004"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testHasAccessibleConstructorsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testHasFieldWorksAsExpected" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testHasFieldWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testHasPrivateFinalFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testHasPrivateFinalFieldsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testHasSetterMethodsWorksAsExpected" time="0.005"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testHasSetterMethodsWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.006"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveArrayTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveOrSpecialTypeWorksAsExpected" time="0.003"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveOrSpecialTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveOrSpecialTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsPrimitiveTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsSpecialTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsSpecialTypeWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ClassUtilsTest" name="testIsSpecialTypeWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetArrayTypeWorksProperly" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetDeclaredFieldRaisesAnExceptionIfTheFieldDoesNotExists" time="0.013"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetDeclaredFieldTypeWorksProperly" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetDeclaredFieldWorksProperly" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldAnnotationWorksProperly" time="0.021"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldAnnotationWorksProperly" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueDirectAccessThrowsExceptionIfTheFieldDoesNotExists" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueDirectAccessThrowsExceptionIfTheFieldDoesNotExists" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueDirectAccessWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueThrowsExceptionIfTheFieldDoesNotExists" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueWorksAsExpected" time="0.038"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetGenericFieldTypeWorksProperly" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetGetterMethodPrefixWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetGetterMethodPrefixWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetGetterMethodPrefixWorksAsExpected" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetMapGenericTypeThrowsIllegalArgumentExceptionWhenTheGivenTypeIsNotAMap" time="0.041"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetParameterAnnotationReturnsNullIfTheAnnotationDoesNotExists" time="0.01"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetParameterAnnotationReturnsTheAnnotationIfExists" time="0.273"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetSetterMethodForFieldThrowsExceptionIfTheMethodDoesNotExists" time="0.003"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetSetterMethodForFieldWorksProperly" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsIllegalStateExceptionWhenGivenExceptionIsIllegalAccessException" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsIllegalStateExceptionWhenGivenExceptionIsNoSuchMethodException" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsRuntimeExceptionWhenGivenExceptionIsRuntimeException" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsUndeclaredThrowableExceptionWhenGivenExceptionIsInvalidBeanException" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testInvokeMethodRaisesAnIllegalArgumentExceptionIfTheArgumentIsWrong" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testInvokeMethodWorksProperly" time="0.0"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testMapGenericFieldTypeWorksProperly" time="0.005"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testSetFieldValueRaiseAnExceptionIfTheValueToSetIsNotValid" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testSetFieldValueTriesToInjectThroughSetterMethodInCaseOfErrors" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testSetFieldValueWorksProperly" time="0.001"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.001"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.001"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.001"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.001"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.003"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.001"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.001"/>
  <testcase classname="com.hotels.beans.base.DefaultsTest" name="testDefaultValueShouldReturnTheExpectedResult" time="0.0"/>
</testsuite> <!-- Surefire test -->
