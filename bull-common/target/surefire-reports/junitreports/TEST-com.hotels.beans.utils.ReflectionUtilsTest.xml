<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="MacBook-Pro-di-Anna.local" failures="0" tests="32" name="com.hotels.beans.utils.ReflectionUtilsTest" time="0.426" errors="0" timestamp="26 mag 2019 20:28:21 GMT" skipped="0">
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetGetterMethodPrefixWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetMapGenericTypeThrowsIllegalArgumentExceptionWhenTheGivenTypeIsNotAMap" time="0.041"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsRuntimeExceptionWhenGivenExceptionIsRuntimeException" time="0.000"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetDeclaredFieldWorksProperly" time="0.000"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testMapGenericFieldTypeWorksProperly" time="0.005"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsIllegalStateExceptionWhenGivenExceptionIsNoSuchMethodException" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetGetterMethodPrefixWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsUndeclaredThrowableExceptionWhenGivenExceptionIsInvalidBeanException" time="0.000"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testInvokeMethodWorksProperly" time="0.000"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testSetFieldValueTriesToInjectThroughSetterMethodInCaseOfErrors" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testSetFieldValueWorksProperly" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetSetterMethodForFieldWorksProperly" time="0.000"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testInvokeMethodRaisesAnIllegalArgumentExceptionIfTheArgumentIsWrong" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueThrowsExceptionIfTheFieldDoesNotExists" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testSetFieldValueRaiseAnExceptionIfTheValueToSetIsNotValid" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldAnnotationWorksProperly" time="0.000"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueDirectAccessThrowsExceptionIfTheFieldDoesNotExists" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetParameterAnnotationReturnsNullIfTheAnnotationDoesNotExists" time="0.010"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetGetterMethodPrefixWorksAsExpected" time="0.000"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueDirectAccessThrowsExceptionIfTheFieldDoesNotExists" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueDirectAccessWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testHandleReflectionExceptionThrowsIllegalStateExceptionWhenGivenExceptionIsIllegalAccessException" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueWorksAsExpected" time="0.038"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetGenericFieldTypeWorksProperly" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldValueWorksAsExpected" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetFieldAnnotationWorksProperly" time="0.021"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetDeclaredFieldTypeWorksProperly" time="0.001"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetParameterAnnotationReturnsTheAnnotationIfExists" time="0.273"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetDeclaredFieldRaisesAnExceptionIfTheFieldDoesNotExists" time="0.013"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetArrayTypeWorksProperly" time="0.002"/>
  <testcase classname="com.hotels.beans.utils.ReflectionUtilsTest" name="testGetSetterMethodForFieldThrowsExceptionIfTheMethodDoesNotExists" time="0.003"/>
</testsuite> <!-- com.hotels.beans.utils.ReflectionUtilsTest -->
